name: CI/CD – Serverless

on:
  push:
    branches: [ dev, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-productos, api-usuarios]

    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js & Serverless
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install -g serverless

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v2
        with:   
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}  # Este paso solo es necesario si usas credenciales temporales
          aws-region:            us-east-1

        # Eliminar los recursos existentes antes de desplegar
      # - name: Remove existing resources
      #   run: sls remove --stage dev --config ./api-productos/serverless.yml  # Esto eliminará los recursos para api-productos
      #   continue-on-error: true # Esto permitirá continuar aunque el paso falle
          

      # Instalar dependencias Python solo para api-usuarios
      - name: Install Python plugin (api-usuarios)
        if: ${{ matrix.service == 'api-usuarios' }}
        working-directory: ./${{ matrix.service }}
        run: |
          npm init -y
          npm install --save-dev serverless-python-requirements
          pip install -r requirements.txt  # Asegúrate de instalar dependencias de Python

      # Instalar dependencias de Node.js solo para api-productos
      - name: Install Node deps (api-productos)
        if: ${{ matrix.service == 'api-productos' }}
        working-directory: ./${{ matrix.service }}
        run: npm install

      - name: Deploy ${{ matrix.service }}
        working-directory: ./${{ matrix.service }}
        run: sls deploy --stage ${{ github.ref_name }} --debug
